;hpdec
;avance-version (16/04/05)
;
;checked by sewe 26.08.2011
;modified by sewe 05.04.2016
;
;acquisition on X with hp proton decoupling
;suitable for various types of decoupling
;
;
;Avance III version
;parameters:
;pl1 : X power level for excitation pulse
;pl2 : =0W, not used
;pl12 : power level for standard proton decoupling e.g. spinal64
;pl13 : special decoupling power e.g. spinal64_13
;p1 : X 90 degree pulse
;p5 : LG 360 degree pulse
;p10 : pulse length for phase modulated pulses (e.g PMLG, DUMBO)
;p22 : H 180 at power level pl13 (pidec)
;p29 : 5 - 10 us, to avoid exact rotor synchronisation
;pcpd2 : pulse length in decoupling sequence (often 180deg-0.2us)
;d1 : recycle delay
;d30 : =1s/cnst31-p4, for pidec12 and pidec13, pi-pulse decoupling
;d31 : =1s/cnst31, 1 rotor period
;spnam1	: lgs-1, lgs-4 or pmlg-36,
;l31 : number of rotor cycles for XiX (=3)
;cnst20 : proton RF field to calculate LG parameters
;cnst21 : =0, proton offset
;cnst22 : +ve Lee-Goldburg offset
;cnst23 : -ve Lee-Goldburg offset
;cnst24 : additional Lee-Goldburg offset
;cnst31 : spinning frequency
;cpdprg2 : sequence used for decoupling (e.g. spinal64)
;zgoptns : -Dlg, -Dlacq, -Dlcp15
;
;
;$CLASS=Solids
;$DIM=1D
;$TYPE=direct excitation
;$SUBTYPE=simple 1D
;$COMMENT=acquisition on X with proton decoupling, various decoupling schemes

prosol relations=<solids_default>


# ifdef lg
#include <lgcalc.incl>
# endif

"acqt0=-p1/2"

1 ze
#ifndef lcp15
#include <p15_prot.incl>
			;make sure p15 does not exceed 10 msec 
			;let supervisor change this pulseprogram if 
			;more is needed
#endif
#ifndef lacq		
			;disable protection file for long acquisition change 
			;   decoupling power !!! or you risk probe damage
			;if you set the label lacq (ZGOPTNS -Dlacq), 
			;   the protection is disabled
#ifndef lowpower		
#include <aq_prot.incl>	
			;allows max. 50 msec acquisition time, supervisor
			;may change  to max. 1s at less than 5 % duty cycle
			;and reduced decoupling field
#endif /* lowpower */
#endif /* lacq */

2 d1 do:f2
#ifdef lowpower
  (p1 pl1 ph1):f1 (1u cw pl17):f2
#else
  (p1 pl1 ph1):f1 (1u cpds2):f2
#endif 
  go=2 ph31
  1m do:f2
  wr #0
HaltAcqu, 1m
exit

ph1= 0 2 1 3
ph31=0 2 1 3



;$Id:$
